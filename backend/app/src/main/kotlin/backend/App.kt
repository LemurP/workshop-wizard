/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package backend

import backend.admin.adminRoutes
import backend.user.Repository
import backend.user.userRoutes
import io.ktor.serialization.kotlinx.json.*
import io.ktor.server.application.*
import io.ktor.server.engine.*
import io.ktor.server.netty.*
import io.ktor.server.plugins.contentnegotiation.*
import io.ktor.server.response.*
import io.ktor.server.routing.*

fun server() = embeddedServer(factory = Netty, port = 8080) {
    configureRouting()
}


fun Application.configureRouting() {
    val userRepository = Repository()

    install(ContentNegotiation) {
        json()
    }
    routing {
        userRoutes(userRepository)
        adminRoutes()
        healthz()

        get {
            call.respondText("Hello, world!")
        }
    }
}

private fun Routing.healthz() {
    get("readiness") {
        call.respondText("READY!")
    }

    get("liveness") {
        call.respondText("ALIVE!")
    }
}

fun main() {
    server().start(wait = true)
}
